name: CI/CD Pipeline

on:
  push:
    branches: [main]
  pull_request:
    branches: [main]

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest
    steps:
      # 1. Baixa o código do repositório
      - uses: actions/checkout@v3

      # 2. Configura o Docker Buildx
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2

      # 3. Constrói e publica a imagem Docker
      - name: Build and Push Docker Image
        run: |
          docker build -t fabrica-door:latest .
          docker tag fabrica-door:latest fabricioifc/fabrica-door:${{ github.sha }}
          echo "${{ secrets.DOCKER_PASSWORD }}" | docker login -u "${{ secrets.DOCKER_USERNAME }}" --password-stdin
          docker push fabricioifc/fabrica-door:${{ github.sha }}

      # 4. Configurar resolução DNS e VPN
      - name: Setup DNS and VPN
        run: |
          # Instala o OpenVPN
          sudo apt-get update
          sudo apt-get install -y openvpn

          # Adiciona entrada DNS manual no /etc/hosts
          echo "${{ secrets.VPN_SERVER_IP }} fsw-ifc.brdrive.net" | sudo tee -a /etc/hosts

          # Verifica se a resolução do domínio funciona
          ping -c 2 fsw-ifc.brdrive.net

          # Decodifica o arquivo de configuração VPN de base64
          echo "${{ secrets.VPN_CONFIG_BASE64 }}" | base64 -d > vpn-config.ovpn

          # Cria arquivo de credenciais
          echo "${{ secrets.VPN_USERNAME }}" > auth.txt
          echo "${{ secrets.VPN_PASSWORD }}" >> auth.txt

          # Inicia OpenVPN e aguarda pela conexão
          sudo openvpn --config vpn-config.ovpn --auth-user-pass auth.txt --daemon --log /tmp/vpn.log

          # Aguarda até 30 segundos pela conexão
          echo "Aguardando conexão VPN..."
          for i in {1..30}; do
            if ip addr | grep -q "tun[0-9]\|tap[0-9]"; then
              echo "VPN conectada após $i segundos!"
              break
            fi
            sleep 1
            echo -n "."
          done

          # Verifica se a VPN está conectada
          if ! ip addr | grep -q "tun[0-9]\|tap[0-9]"; then
            echo "Falha ao conectar VPN. Log:"
            cat /tmp/vpn.log
            exit 1
          fi

      # 5. Implanta no servidor via SSH
      - name: Deploy to Server
        uses: appleboy/ssh-action@v1.0.3
        with:
          host: ${{ secrets.SSH_HOST }}
          username: ${{ secrets.SSH_USER }}
          key: ${{ secrets.SSH_PRIVATE_KEY }}
          port: ${{ secrets.SSH_PORT }}
          script: |
            docker pull fabricioifc/fabrica-door:${{ github.sha }}
            cd /home/${{ secrets.SSH_USER }}/fabrica-door
            docker-compose up -d --force-recreate
