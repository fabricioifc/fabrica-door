name: CI/CD Pipeline

on:
  push:
    branches:
      - main

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest

    steps:
      # Checkout do código
      - name: Checkout repository
        uses: actions/checkout@v3

      # Login no DockerHub
      - name: Login to DockerHub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      # Configurar variáveis de ambiente
      - name: Set up environment variables
        run: |
          echo "PORT=${{ secrets.PORT }}" >> .env
          # Adicione outras variáveis de ambiente necessárias

      # Build e push da imagem Docker
      - name: Build and push Docker image
        run: |
          docker build . -t ${{ secrets.DOCKER_USERNAME }}/fabrica-prod-door:${{ github.sha }}
          docker push ${{ secrets.DOCKER_USERNAME }}/fabrica-prod-door:${{ github.sha }}

      # Instalar cliente SSH
      - name: Install SSH Client
        run: |
          sudo apt-get update
          sudo apt-get install -y openssh-client

      # Configurar SSH
      - name: Setup SSH
        run: |
          mkdir -p ~/.ssh/
          echo "${{ secrets.SSH_PRIVATE_KEY }}" > ~/.ssh/id_rsa
          chmod 600 ~/.ssh/id_rsa
          ssh-keyscan -p ${{ secrets.SSH_PORT }} ${{ secrets.SSH_HOST }} >> ~/.ssh/known_hosts

      # Deploy para VPS
      - name: Deploy to VPS
        run: |
          ssh -p ${{ secrets.SSH_PORT }} ${{ secrets.SSH_USER }}@${{ secrets.SSH_HOST }} << 'EOF'
            # Login no DockerHub no servidor
            docker login -u ${{ secrets.DOCKER_USERNAME }} -p ${{ secrets.DOCKER_PASSWORD }}
            
            # Para containers existentes
            docker stop fabrica-prod-door || true
            docker rm fabrica-prod-door || true
            
            # Pull da nova imagem
            docker pull ${{ secrets.DOCKER_USERNAME }}/fabrica-prod-door:${{ github.sha }}
            
            # Criação do network se não existir
            docker network create fabrica-door-network || true
            
            # Executa o novo container
            docker run -d \
              --name fabrica-prod-door \
              -p ${{ secrets.PORT }}:${{ secrets.PORT }} \
              -v $(pwd)/app:/app \
              --network fabrica-door-network \
              --restart unless-stopped \
              ${{ secrets.DOCKER_USERNAME }}/fabrica-prod-door:${{ github.sha }}
            
            # Limpeza de imagens antigas
            docker image prune -f
          EOF

      # Limpeza
      - name: Cleanup
        if: always()
        run: |
          rm -rf ~/.ssh
